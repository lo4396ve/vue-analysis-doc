(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{381:function(e,t,s){"use strict";s.r(t);var r=s(45),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),s("p",[e._v("读好的源码可以提升自己的编程水平，vue就是一个好的选择。")]),e._v(" "),s("p",[e._v("Vue源码体积比较庞大，我在vue源码src的平级目录下创建mysrc目录，mysrc存放的是一个vue的缩影版，代码只包含vue初始化以及初次挂载逻辑，保证一个简单的vue项目能运行。mysrc与src保持一样的目录结构一样的逻辑和思维，只是从src中枝剪掉部分代码的一个缩影。从这个缩影版起步研究vue源码可以降低直接阅读vue源码的难度，然后在此基础上去填补vue的其他功能（比如计算属性、事件、生命周期、slot等）最终还原vue的所有常用功能。我已经将包含mysrc缩影版的代码上传到github仓库。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/lo4396ve/vue-analysis/",target:"_blank",rel:"noopener noreferrer"}},[e._v("项目地址: https://github.com/lo4396ve/vue-analysis/"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("项目的管理方式利用分支管理不同版本，比如simple（默认分支）分支mysrc目录包含的是最初索影版本，state分支在simple分支基础上添加了vue对data的处理，填补了data动态绑定功能。所以最后还是建议大家把项目clone到本都，文章后面的章节会根据不同分支讲解vue不同的功能。")])])}),[],!1,null,null,null);t.default=a.exports}}]);